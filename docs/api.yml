openapi: 3.0.3
info:
  title: Library API
  version: 1.0.0
  description: STD22083
servers:
  - url: https://library.com
paths:
  /authors:
    get:
      summary: Get all books
      description: The returned books are ordered by updated datetime.
      operationId: getBooks
      parameters:
        - in: query
          name: bookName
          description: Filter return books by given name
          required: false
          schema:
            type: string
        - in: query
          name: releaseDateStart
          description: Filter books by release date (start of interval)
          required: false
          schema:
            type: string
            format: date
        - in: query
          name: releaseDateEnd
          description: Filter books by release date (end of interval)
          required: false
          schema:
            type: string
            format: date
      responses:
        200:
          description: The list of filtered books
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Book'
    put:
      summary: Create or update a list of books
      operationId: crupdateBooks
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Book'
      responses:
        200:
          description: The list of created or updated books
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Book'
    delete:
      summary: Delete books by name
      operationId: deleteBooksByName
      parameters:
        - in: query
          name: bookName
          description: Filter books by name
          required: false
          schema:
            type: string
      responses:
        200:
          description: Books have been deleted

  #TODO2: complete GET (can be filtered by name) - PUT - DELETE
components:
  schemas:
    Book:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        sex:
          #TODO1: set it as a component with properties : id, name, sex (M or F)
          type: string